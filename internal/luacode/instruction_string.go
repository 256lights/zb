// Code generated by "stringer -type=OpCode,OpMode -linecomment -output=instruction_string.go"; DO NOT EDIT.

package luacode

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[OpMove-0]
	_ = x[OpLoadI-1]
	_ = x[OpLoadF-2]
	_ = x[OpLoadK-3]
	_ = x[OpLoadKX-4]
	_ = x[OpLoadFalse-5]
	_ = x[OpLFalseSkip-6]
	_ = x[OpLoadTrue-7]
	_ = x[OpLoadNil-8]
	_ = x[OpGetUpval-9]
	_ = x[OpSetUpval-10]
	_ = x[OpGetTabUp-11]
	_ = x[OpGetTable-12]
	_ = x[OpGetI-13]
	_ = x[OpGetField-14]
	_ = x[OpSetTabUp-15]
	_ = x[OpSetTable-16]
	_ = x[OpSetI-17]
	_ = x[OpSetField-18]
	_ = x[OpNewTable-19]
	_ = x[OpSelf-20]
	_ = x[OpAddI-21]
	_ = x[OpAddK-22]
	_ = x[OpSubK-23]
	_ = x[OpMulK-24]
	_ = x[OpModK-25]
	_ = x[OpPowK-26]
	_ = x[OpDivK-27]
	_ = x[OpIDivK-28]
	_ = x[OpBAndK-29]
	_ = x[OpBOrK-30]
	_ = x[OpBXORK-31]
	_ = x[OpSHRI-32]
	_ = x[OpSHLI-33]
	_ = x[OpAdd-34]
	_ = x[OpSub-35]
	_ = x[OpMul-36]
	_ = x[OpMod-37]
	_ = x[OpPow-38]
	_ = x[OpDiv-39]
	_ = x[OpIDiv-40]
	_ = x[OpBAnd-41]
	_ = x[OpBOr-42]
	_ = x[OpBXOR-43]
	_ = x[OpSHL-44]
	_ = x[OpSHR-45]
	_ = x[OpMMBin-46]
	_ = x[OpMMBinI-47]
	_ = x[OpMMBinK-48]
	_ = x[OpUNM-49]
	_ = x[OpBNot-50]
	_ = x[OpNot-51]
	_ = x[OpLen-52]
	_ = x[OpConcat-53]
	_ = x[OpClose-54]
	_ = x[OpTBC-55]
	_ = x[OpJMP-56]
	_ = x[OpEQ-57]
	_ = x[OpLT-58]
	_ = x[OpLE-59]
	_ = x[OpEQK-60]
	_ = x[OpEQI-61]
	_ = x[OpLTI-62]
	_ = x[OpLEI-63]
	_ = x[OpGTI-64]
	_ = x[OpGEI-65]
	_ = x[OpTest-66]
	_ = x[OpTestSet-67]
	_ = x[OpCall-68]
	_ = x[OpTailCall-69]
	_ = x[OpReturn-70]
	_ = x[OpReturn0-71]
	_ = x[OpReturn1-72]
	_ = x[OpForLoop-73]
	_ = x[OpForPrep-74]
	_ = x[OpTForPrep-75]
	_ = x[OpTForCall-76]
	_ = x[OpTForLoop-77]
	_ = x[OpSetList-78]
	_ = x[OpClosure-79]
	_ = x[OpVararg-80]
	_ = x[OpVarargPrep-81]
	_ = x[OpExtraArg-82]
}

const _OpCode_name = "MOVELOADILOADFLOADKLOADKXLOADFALSELFALSESKIPLOADTRUELOADNILGETUPVALSETUPVALGETTABUPGETTABLEGETIGETFIELDSETTABUPSETTABLESETISETFIELDNEWTABLESELFADDIADDKSUBKMULKMODKPOWKDIVKIDIVKBANDKBORKBXORKSHRISHLIADDSUBMULMODPOWDIVIDIVBANDBORBXORSHLSHRMMBINMMBINIMMBINKUNMBNOTNOTLENCONCATCLOSETBCJMPEQLTLEEQKEQILTILEIGTIGEITESTTESTSETCALLTAILCALLRETURNRETURN0RETURN1FORLOOPFORPREPTFORPREPTFORCALLTFORLOOPSETLISTCLOSUREVARARGVARARGPREPEXTRAARG"

var _OpCode_index = [...]uint16{0, 4, 9, 14, 19, 25, 34, 44, 52, 59, 67, 75, 83, 91, 95, 103, 111, 119, 123, 131, 139, 143, 147, 151, 155, 159, 163, 167, 171, 176, 181, 185, 190, 194, 198, 201, 204, 207, 210, 213, 216, 220, 224, 227, 231, 234, 237, 242, 248, 254, 257, 261, 264, 267, 273, 278, 281, 284, 286, 288, 290, 293, 296, 299, 302, 305, 308, 312, 319, 323, 331, 337, 344, 351, 358, 365, 373, 381, 389, 396, 403, 409, 419, 427}

func (i OpCode) String() string {
	if i >= OpCode(len(_OpCode_index)-1) {
		return "OpCode(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _OpCode_name[_OpCode_index[i]:_OpCode_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[OpModeABC-1]
	_ = x[OpModeABx-2]
	_ = x[OpModeAsBx-3]
	_ = x[OpModeAx-4]
	_ = x[OpModeJ-5]
}

const _OpMode_name = "OpModeABCOpModeABxOpModeAsBxOpModeAxOpModeJ"

var _OpMode_index = [...]uint8{0, 9, 18, 28, 36, 43}

func (i OpMode) String() string {
	i -= 1
	if i >= OpMode(len(_OpMode_index)-1) {
		return "OpMode(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _OpMode_name[_OpMode_index[i]:_OpMode_index[i+1]]
}
