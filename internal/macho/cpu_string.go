// Code generated by "stringer -type=CPUType -linecomment -output=cpu_string.go"; DO NOT EDIT.

package macho

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[CPUTypeVAX-1]
	_ = x[CPUTypeMC680x0-6]
	_ = x[CPUTypeI386-7]
	_ = x[CPUTypeX86_64-16777223]
	_ = x[CPUTypeMC98000-10]
	_ = x[CPUTypeHPPA-11]
	_ = x[CPUTypeARM-12]
	_ = x[CPUTypeARM64-16777228]
	_ = x[CPUTypeARM64_32-33554444]
	_ = x[CPUTypeMC88000-13]
	_ = x[CPUTypeSPARC-14]
	_ = x[CPUTypeI860-15]
	_ = x[CPUTypePowerPC-18]
	_ = x[CPUTypePowerPC64-16777234]
}

const (
	_CPUType_name_0 = "CPU_TYPE_VAX"
	_CPUType_name_1 = "CPU_TYPE_MC680x0CPU_TYPE_X86"
	_CPUType_name_2 = "CPU_TYPE_MC98000CPU_TYPE_HPPACPU_TYPE_ARMCPU_TYPE_MC88000CPU_TYPE_SPARCCPU_TYPE_I860"
	_CPUType_name_3 = "CPU_TYPE_POWERPC"
	_CPUType_name_4 = "CPU_TYPE_X86_64"
	_CPUType_name_5 = "CPU_TYPE_ARM64"
	_CPUType_name_6 = "CPU_TYPE_POWERPC64"
	_CPUType_name_7 = "CPU_TYPE_ARM64_32"
)

var (
	_CPUType_index_1 = [...]uint8{0, 16, 28}
	_CPUType_index_2 = [...]uint8{0, 16, 29, 41, 57, 71, 84}
)

func (i CPUType) String() string {
	switch {
	case i == 1:
		return _CPUType_name_0
	case 6 <= i && i <= 7:
		i -= 6
		return _CPUType_name_1[_CPUType_index_1[i]:_CPUType_index_1[i+1]]
	case 10 <= i && i <= 15:
		i -= 10
		return _CPUType_name_2[_CPUType_index_2[i]:_CPUType_index_2[i+1]]
	case i == 18:
		return _CPUType_name_3
	case i == 16777223:
		return _CPUType_name_4
	case i == 16777228:
		return _CPUType_name_5
	case i == 16777234:
		return _CPUType_name_6
	case i == 33554444:
		return _CPUType_name_7
	default:
		return "CPUType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
